/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/main/main.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/tree-kill/index.js":
/*!*****************************************!*\
  !*** ./node_modules/tree-kill/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar childProcess = __webpack_require__(/*! child_process */ \"child_process\");\nvar spawn = childProcess.spawn;\nvar exec = childProcess.exec;\n\nmodule.exports = function (pid, signal, callback) {\n    if (typeof signal === 'function' && callback === undefined) {\n        callback = signal;\n        signal = undefined;\n    }\n\n    pid = parseInt(pid);\n    if (Number.isNaN(pid)) {\n        if (callback) {\n            return callback(new Error(\"pid must be a number\"));\n        } else {\n            throw new Error(\"pid must be a number\");\n        }\n    }\n\n    var tree = {};\n    var pidsToProcess = {};\n    tree[pid] = [];\n    pidsToProcess[pid] = 1;\n\n    switch (process.platform) {\n    case 'win32':\n        exec('taskkill /pid ' + pid + ' /T /F', callback);\n        break;\n    case 'darwin':\n        buildProcessTree(pid, tree, pidsToProcess, function (parentPid) {\n          return spawn('pgrep', ['-P', parentPid]);\n        }, function () {\n            killAll(tree, signal, callback);\n        });\n        break;\n    // case 'sunos':\n    //     buildProcessTreeSunOS(pid, tree, pidsToProcess, function () {\n    //         killAll(tree, signal, callback);\n    //     });\n    //     break;\n    default: // Linux\n        buildProcessTree(pid, tree, pidsToProcess, function (parentPid) {\n          return spawn('ps', ['-o', 'pid', '--no-headers', '--ppid', parentPid]);\n        }, function () {\n            killAll(tree, signal, callback);\n        });\n        break;\n    }\n};\n\nfunction killAll (tree, signal, callback) {\n    var killed = {};\n    try {\n        Object.keys(tree).forEach(function (pid) {\n            tree[pid].forEach(function (pidpid) {\n                if (!killed[pidpid]) {\n                    killPid(pidpid, signal);\n                    killed[pidpid] = 1;\n                }\n            });\n            if (!killed[pid]) {\n                killPid(pid, signal);\n                killed[pid] = 1;\n            }\n        });\n    } catch (err) {\n        if (callback) {\n            return callback(err);\n        } else {\n            throw err;\n        }\n    }\n    if (callback) {\n        return callback();\n    }\n}\n\nfunction killPid(pid, signal) {\n    try {\n        process.kill(parseInt(pid, 10), signal);\n    }\n    catch (err) {\n        if (err.code !== 'ESRCH') throw err;\n    }\n}\n\nfunction buildProcessTree (parentPid, tree, pidsToProcess, spawnChildProcessesList, cb) {\n    var ps = spawnChildProcessesList(parentPid);\n    var allData = '';\n    ps.stdout.on('data', function (data) {\n        var data = data.toString('ascii');\n        allData += data;\n    });\n\n    var onClose = function (code) {\n        delete pidsToProcess[parentPid];\n\n        if (code != 0) {\n            // no more parent processes\n            if (Object.keys(pidsToProcess).length == 0) {\n                cb();\n            }\n            return;\n        }\n\n        allData.match(/\\d+/g).forEach(function (pid) {\n          pid = parseInt(pid, 10);\n          tree[parentPid].push(pid);\n          tree[pid] = [];\n          pidsToProcess[pid] = 1;\n          buildProcessTree(pid, tree, pidsToProcess, spawnChildProcessesList, cb);\n        });\n    };\n\n    ps.on('close', onClose);\n}\n\n\n//# sourceURL=webpack:///./node_modules/tree-kill/index.js?");

/***/ }),

/***/ "./src/main/Config.ts":
/*!****************************!*\
  !*** ./src/main/Config.ts ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var electron__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! electron */ \"electron\");\n/* harmony import */ var electron__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(electron__WEBPACK_IMPORTED_MODULE_0__);\n\nclass Config {\n    constructor() {\n        /** 本机IP */\n        this.localIp = \"127.0.0.1\";\n        /** 全局配置路径 */\n        this.globalConfigPath = `${this.rootPath}/dist/GlobalConfig.json`;\n        /** native配置路径 */\n        this.nativeCnfPath = `${this.rootPath}/package/server/config/native_lesson_cnf.json`;\n        /** 后台进程日志路径 */\n        this.processLogPath = `${this.rootPath}/dist/log/process.log`;\n        /** 前台日志路径 */\n        this.ipcMainLogPath = `${this.rootPath}/dist/log/ipcMain.log`;\n        /** 正式环境用tokenDomain */\n        this.releaseTokenDomain = `.bellcode.com`;\n        /** ready环境用tokenDomain */\n        this.readyTokenDomain = `.wkcoding.com`;\n        /** 渠道号,默认bian_game,从平台那边获取的时候再赋值 */\n        this._channel = 'bian_game';\n        /** 上课模式渠道常量 */\n        this.constChannelLesson = 'bian_lesson';\n        /** 上课伪协议头 */\n        this.constPseudoProtocol = 'bellplanet://';\n        this.constBellcodeUrl = 'www.bellcode.com';\n    }\n    get nativeServerPort() {\n        return this._nativeServerPort;\n    }\n    setNativeServerPort(value) {\n        this._nativeServerPort = value;\n    }\n    get rootPath() {\n        if (!this._rootPath) {\n            this._rootPath = electron__WEBPACK_IMPORTED_MODULE_0__[\"app\"].getAppPath();\n        }\n        return this._rootPath;\n    }\n    get environName() {\n        return this._environName;\n    }\n    setEnvironName(value) {\n        this._environName = value;\n    }\n    get gameServerLocalIp() {\n        return this._gameServerLocalIp;\n    }\n    setGameServerLocalIp(value) {\n        this._gameServerLocalIp = value;\n    }\n    get gameServerLocalPort() {\n        return this._gameServerLocalPort;\n    }\n    setGameServerLocalPort(value) {\n        this._gameServerLocalPort = value;\n    }\n    get gameServerNatUrl() {\n        return this._gameServerNatUrl;\n    }\n    setGameServerNatUrl(value) {\n        this._gameServerNatUrl = value;\n    }\n    get gameServerNatPort() {\n        return this._gameServerNatPort;\n    }\n    setGameServerNatPort(value) {\n        this._gameServerNatPort = value;\n    }\n    get gameServerInited() {\n        return this._gameServerInited;\n    }\n    setGameServerInited(value) {\n        this._gameServerInited = value;\n    }\n    get channel() {\n        return this._channel;\n    }\n    setChannel(value) {\n        this._channel = value;\n    }\n    get bellTempToken() {\n        return this._bellTempToken;\n    }\n    setBellTempToken(value) {\n        this._bellTempToken = value;\n    }\n    get bellToken() {\n        return this._bellToken;\n    }\n    setBellToken(value) {\n        this._bellToken = value;\n    }\n    get bellApiOrigin() {\n        return this._bellApiOrigin;\n    }\n    setBellApiOrigin(value) {\n        return this._bellApiOrigin = value;\n    }\n    get bellPackageId() {\n        return this._bellPackageId;\n    }\n    setBellPackageId(value) {\n        this._bellPackageId = value;\n    }\n    get bellLessonId() {\n        return this._bellLessonId;\n    }\n    setBellLessonId(value) {\n        this._bellLessonId = value;\n    }\n    get bellActId() {\n        return this._bellActId;\n    }\n    setBellActId(value) {\n        this._bellActId = value;\n    }\n    get bellBackUrl() {\n        return this._bellBackUrl;\n    }\n    setBellBackUrl(value) {\n        this._bellBackUrl = value;\n    }\n    get classId() {\n        return this._classId;\n    }\n    setClassId(value) {\n        this._classId = value;\n    }\n    get userType() {\n        return this._userType;\n    }\n    setUserType(value) {\n        this._userType = value;\n    }\n    get realName() {\n        return this._realName;\n    }\n    setRealName(value) {\n        this._realName = value;\n    }\n    get nickName() {\n        return this._nickName;\n    }\n    setNickName(value) {\n        this._nickName = value;\n    }\n    get standAlone() {\n        return this._standAlone;\n    }\n    setStandAlone(value) {\n        this._standAlone = value;\n    }\n    get lessonRouter() {\n        return this._lessonRouter;\n    }\n    setLessonRouter(value) {\n        this._lessonRouter = value;\n    }\n    get nativeMode() {\n        return this._nativeMode;\n    }\n    setNativeMode(value) {\n        this._nativeMode = value;\n    }\n    get gameServerMode() {\n        return this._gameServerMode;\n    }\n    setGameServerMode(value) {\n        this._gameServerMode = value;\n    }\n    get urlValue() {\n        return this._urlValue;\n    }\n    setUrlValue(value) {\n        this._urlValue = decodeURIComponent(value);\n    }\n    get mainWindow() {\n        return this._mainWindow;\n    }\n    setMainWindow(value) {\n        this._mainWindow = value;\n    }\n    get nativeServer() {\n        return this._nativeServer;\n    }\n    setNativeServer(value) {\n        this._nativeServer = value;\n    }\n    get gameServerProcess() {\n        return this._gameServerProcess;\n    }\n    setGameServerProcess(value) {\n        this._gameServerProcess = value;\n    }\n}\nlet config = new Config();\n/* harmony default export */ __webpack_exports__[\"default\"] = (config);\n\n\n//# sourceURL=webpack:///./src/main/Config.ts?");

/***/ }),

/***/ "./src/main/Message.ts":
/*!*****************************!*\
  !*** ./src/main/Message.ts ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var electron__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! electron */ \"electron\");\n/* harmony import */ var electron__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(electron__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var querystring__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! querystring */ \"querystring\");\n/* harmony import */ var querystring__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(querystring__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./logger */ \"./src/main/logger.ts\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util */ \"./src/main/util.ts\");\n/* harmony import */ var _define__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./define */ \"./src/main/define.ts\");\n/* harmony import */ var _Config__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Config */ \"./src/main/Config.ts\");\n/* harmony import */ var _Platform__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Platform */ \"./src/main/Platform.ts\");\n/* harmony import */ var _Server__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Server */ \"./src/main/Server.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/**\n * @author 雪糕\n * @desc 主进程消息处理类\n * @date 2020-02-26 15:31:07\n * @Last Modified by: 雪糕\n * @Last Modified time: 2020-03-21 21:28:41\n */\n\n\n\n\n\n\n\n\nclass Message {\n    constructor() {\n        //消息对应方法集合\n        this.msgMap = {\n            'UPDATE_GLOBAL_CONFIG': this.onUpdateGlobalConfig.bind(this),\n            'CHECK_UPDATE_COMPLETE': this.onCheckUpdateComplete.bind(this),\n            'MAP_TEMPLATE_ENTER': this.onMapTemplateEnter.bind(this),\n            'MAP_TEMPLATE_ROOM_CREATE': this.onMapTemplateRoomCreate.bind(this),\n        };\n    }\n    /** 发送主进程消息 */\n    sendIpcMsg(msgId, ...args) {\n        if (!_Config__WEBPACK_IMPORTED_MODULE_5__[\"default\"].mainWindow) {\n            _logger__WEBPACK_IMPORTED_MODULE_2__[\"logger\"].error('main', `发送主进程消息失败:${msgId} config.mainWindow不存在 args`, ...args);\n            return;\n        }\n        if (!_Config__WEBPACK_IMPORTED_MODULE_5__[\"default\"].mainWindow.webContents) {\n            _logger__WEBPACK_IMPORTED_MODULE_2__[\"logger\"].error('main', `发送主进程消息失败:${msgId} config.mainWindow.webContents不存在 args`, ...args);\n            return;\n        }\n        _logger__WEBPACK_IMPORTED_MODULE_2__[\"logger\"].log('main', `发送主进程消息:${msgId} args`, ...args);\n        _Config__WEBPACK_IMPORTED_MODULE_5__[\"default\"].mainWindow.webContents.send('MAIN_PROCESS_MESSAGE', msgId, ...args);\n    }\n    /** 初始化 */\n    init() {\n        _logger__WEBPACK_IMPORTED_MODULE_2__[\"logger\"].log('main', `初始化主进程监听消息`);\n        //监听渲染进程消息\n        electron__WEBPACK_IMPORTED_MODULE_0__[\"ipcMain\"].on('RENDERER_PROCESS_MESSAGE', (evt, msgId, ...args) => {\n            _logger__WEBPACK_IMPORTED_MODULE_2__[\"logger\"].log('main', `收到渲染进程消息:${msgId} args`, ...args);\n            this.applyIpcMsg(msgId, ...args);\n        });\n        //监听 客户端消息 应用 或者 转发给渲染进程\n        electron__WEBPACK_IMPORTED_MODULE_0__[\"ipcMain\"].on('CLIENT_PROCESS_MESSAGE', (evt, msgId, ...args) => {\n            _logger__WEBPACK_IMPORTED_MODULE_2__[\"logger\"].log('main', `收到客户端消息:${msgId} args`, ...args);\n            this.applyIpcMsg(msgId, ...args); //应用\n            // sendIpcMsg(msgId, ...args);     //转发\n        });\n    }\n    /** 应用渲染进程消息 */\n    applyIpcMsg(msgId, ...args) {\n        let func = this.msgMap[msgId];\n        if (func) {\n            func(...args);\n        }\n    }\n    /** 更新全局配置 */\n    onUpdateGlobalConfig(globalConfig) {\n        _util__WEBPACK_IMPORTED_MODULE_3__[\"util\"].globalConfig = globalConfig;\n    }\n    /** 检查更新完毕 */\n    onCheckUpdateComplete() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield _util__WEBPACK_IMPORTED_MODULE_3__[\"util\"].init();\n            _logger__WEBPACK_IMPORTED_MODULE_2__[\"logger\"].log('config', `nativeMode:${_Config__WEBPACK_IMPORTED_MODULE_5__[\"default\"].nativeMode}`);\n            if (_Config__WEBPACK_IMPORTED_MODULE_5__[\"default\"].nativeMode === _define__WEBPACK_IMPORTED_MODULE_4__[\"define\"].eNativeMode.banner) {\n                yield this.startBanner();\n                return;\n            }\n            if (_Config__WEBPACK_IMPORTED_MODULE_5__[\"default\"].nativeMode === _define__WEBPACK_IMPORTED_MODULE_4__[\"define\"].eNativeMode.createMap) {\n                yield this.startCreateMap();\n                return;\n            }\n            if (_Config__WEBPACK_IMPORTED_MODULE_5__[\"default\"].nativeMode === _define__WEBPACK_IMPORTED_MODULE_4__[\"define\"].eNativeMode.game) {\n                yield this.startNativeGame();\n                return;\n            }\n            if (_Config__WEBPACK_IMPORTED_MODULE_5__[\"default\"].nativeMode === _define__WEBPACK_IMPORTED_MODULE_4__[\"define\"].eNativeMode.website) {\n                yield this.startNativeWebsite();\n                return;\n            }\n            if (_Config__WEBPACK_IMPORTED_MODULE_5__[\"default\"].nativeMode === _define__WEBPACK_IMPORTED_MODULE_4__[\"define\"].eNativeMode.platform) {\n                yield this.startNativePlatform();\n                return;\n            }\n        });\n    }\n    /** 从banner模式进入 */\n    startBanner() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let queryValue = _Config__WEBPACK_IMPORTED_MODULE_5__[\"default\"].urlValue.slice(_Config__WEBPACK_IMPORTED_MODULE_5__[\"default\"].urlValue.indexOf(\"?\") + 1);\n            queryValue += `&nativeMode=${_define__WEBPACK_IMPORTED_MODULE_4__[\"define\"].eNativeMode.banner}`;\n            _logger__WEBPACK_IMPORTED_MODULE_2__[\"logger\"].log('update', `从banner模式进入`);\n            this.sendIpcMsg('START_NATIVE_CLIENT', queryValue);\n        });\n    }\n    /** 从创造地图模式进入 */\n    startCreateMap() {\n        return __awaiter(this, void 0, void 0, function* () {\n            //平台初始化\n            let queryObject = yield _Platform__WEBPACK_IMPORTED_MODULE_6__[\"default\"].init();\n            //初始化参数\n            // Object.assign(queryObject, platform.queryObject);\n            // queryObject['fakeUserType'] = config.userType;\n            queryObject['nativeMode'] = _define__WEBPACK_IMPORTED_MODULE_4__[\"define\"].eNativeMode.createMap.toString();\n            let queryValue = querystring__WEBPACK_IMPORTED_MODULE_1___default.a.stringify(queryObject);\n            _logger__WEBPACK_IMPORTED_MODULE_2__[\"logger\"].log('update', `从创造地图模式进入`);\n            this.sendIpcMsg('START_NATIVE_CLIENT', queryValue);\n        });\n    }\n    /** 从游戏模式进入 */\n    startNativeGame() {\n        return __awaiter(this, void 0, void 0, function* () {\n            _logger__WEBPACK_IMPORTED_MODULE_2__[\"logger\"].log('update', `从游戏模式进入`);\n            //初始化参数\n            let queryObject = { fakeGameMode: \"lessons\", nativeMode: _define__WEBPACK_IMPORTED_MODULE_4__[\"define\"].eNativeMode.game };\n            //本地服务器初始化\n            yield message.init();\n            let queryValue = querystring__WEBPACK_IMPORTED_MODULE_1___default.a.stringify(queryObject);\n            this.sendIpcMsg('START_NATIVE_CLIENT', queryValue);\n        });\n    }\n    /** 官网地址进入 */\n    startNativeWebsite() {\n        return __awaiter(this, void 0, void 0, function* () {\n            _logger__WEBPACK_IMPORTED_MODULE_2__[\"logger\"].log('update', `从官网地址进入`);\n            this.sendIpcMsg('START_NATIVE_WEBSITE');\n        });\n    }\n    /** 从平台进入 */\n    startNativePlatform() {\n        return __awaiter(this, void 0, void 0, function* () {\n            _logger__WEBPACK_IMPORTED_MODULE_2__[\"logger\"].log('update', `从平台进入`);\n            //平台初始化\n            let queryObject = yield _Platform__WEBPACK_IMPORTED_MODULE_6__[\"default\"].init();\n            //初始化参数\n            // Object.assign(queryObject, platform.queryObject);\n            _Config__WEBPACK_IMPORTED_MODULE_5__[\"default\"].setChannel(_Config__WEBPACK_IMPORTED_MODULE_5__[\"default\"].constChannelLesson);\n            queryObject['gameChannel'] = _Config__WEBPACK_IMPORTED_MODULE_5__[\"default\"].constChannelLesson;\n            queryObject['fakeUserType'] = _Config__WEBPACK_IMPORTED_MODULE_5__[\"default\"].userType.toString();\n            queryObject['nativeMode'] = _define__WEBPACK_IMPORTED_MODULE_4__[\"define\"].eNativeMode.platform.toString();\n            ;\n            _logger__WEBPACK_IMPORTED_MODULE_2__[\"logger\"].log(`test`, `queryObject`, queryObject);\n            //非学生端 或者单人单服务器 本地服务器初始化\n            if (_Config__WEBPACK_IMPORTED_MODULE_5__[\"default\"].userType != _define__WEBPACK_IMPORTED_MODULE_4__[\"define\"].eUserType.student || _Config__WEBPACK_IMPORTED_MODULE_5__[\"default\"].standAlone) {\n                _Server__WEBPACK_IMPORTED_MODULE_7__[\"default\"].init();\n            }\n            _logger__WEBPACK_IMPORTED_MODULE_2__[\"logger\"].log(`test`, `queryObject`, queryObject);\n            this.sendIpcMsg('START_NATIVE_PLATFORM', queryObject);\n        });\n    }\n    /** 收到地图模板游戏服务器 */\n    onMapTemplateEnter(gid, gameArgs) {\n        _util__WEBPACK_IMPORTED_MODULE_3__[\"util\"].writeServerCnfValue('gid', gid);\n        _util__WEBPACK_IMPORTED_MODULE_3__[\"util\"].writeServerCnfValue('gameArgs', gameArgs);\n        _Server__WEBPACK_IMPORTED_MODULE_7__[\"default\"].createNativeServer(_define__WEBPACK_IMPORTED_MODULE_4__[\"define\"].eGameServerMode.mapTemplate);\n    }\n    /** 收到地图模板房间游戏服务器 */\n    onMapTemplateRoomCreate(gid, gameArgs) {\n        _util__WEBPACK_IMPORTED_MODULE_3__[\"util\"].writeServerCnfValue('gid', gid);\n        _util__WEBPACK_IMPORTED_MODULE_3__[\"util\"].writeServerCnfValue('gameArgs', gameArgs);\n        _Server__WEBPACK_IMPORTED_MODULE_7__[\"default\"].createNativeServer(_define__WEBPACK_IMPORTED_MODULE_4__[\"define\"].eGameServerMode.mapTemplateRoom);\n    }\n    /** 发送消息到客户端 */\n    sendMsgToClient(msgId, ...args) {\n        let data = [msgId, args];\n        let content = JSON.stringify(data);\n        _Config__WEBPACK_IMPORTED_MODULE_5__[\"default\"].mainWindow.webContents.executeJavaScript(`\r\n            if(window.frames && window.frames.length > 0) {\r\n                window.frames[0].postMessage({'key':'nativeMsg', 'value':\\'${content}\\'},'*');\r\n            } else if(window){\r\n                window.postMessage({'key':'nativeMsg', 'value':\\'${content}\\'},'*');\r\n            }\r\n        `);\n    }\n}\nlet message = new Message();\n/* harmony default export */ __webpack_exports__[\"default\"] = (message);\n\n\n//# sourceURL=webpack:///./src/main/Message.ts?");

/***/ }),

/***/ "./src/main/Platform.ts":
/*!******************************!*\
  !*** ./src/main/Platform.ts ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var querystring__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! querystring */ \"querystring\");\n/* harmony import */ var querystring__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(querystring__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./logger */ \"./src/main/logger.ts\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util */ \"./src/main/util.ts\");\n/* harmony import */ var _Message__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Message */ \"./src/main/Message.ts\");\n/* harmony import */ var _Config__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Config */ \"./src/main/Config.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/**\n * @author 雪糕\n * @desc 平台相关的逻辑\n * @date 2020-02-19 11:22:49\n * @Last Modified by: 雪糕\n * @Last Modified time: 2020-03-23 15:12:16\n */\n\n\n\n\n\nclass Platform {\n    init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let urlValue = _Config__WEBPACK_IMPORTED_MODULE_4__[\"default\"].urlValue;\n            //伪协议启动参数\n            _logger__WEBPACK_IMPORTED_MODULE_1__[\"logger\"].log('platform', `初始化平台数据`, urlValue);\n            let argsValue = urlValue.slice(urlValue.indexOf(\"?\") + 1);\n            //解析参数\n            let argsObj = querystring__WEBPACK_IMPORTED_MODULE_0___default.a.parse(argsValue);\n            let queryObject = {};\n            _logger__WEBPACK_IMPORTED_MODULE_1__[\"logger\"].log('platform', 'argsObj', argsObj);\n            for (const key in argsObj) {\n                let value;\n                if (Array.isArray(argsObj[key])) {\n                    value = argsObj[key][0];\n                }\n                else {\n                    value = argsObj[key];\n                }\n                if (key === 'temporary_token') {\n                    _Config__WEBPACK_IMPORTED_MODULE_4__[\"default\"].setBellTempToken(`${value}`);\n                    continue;\n                }\n                if (key === 'class_id') {\n                    queryObject[key] = `${value}`;\n                    _Config__WEBPACK_IMPORTED_MODULE_4__[\"default\"].setClassId(+value);\n                    _util__WEBPACK_IMPORTED_MODULE_2__[\"util\"].writeServerCnfValue(\"classId\", value);\n                    continue;\n                }\n                if (key === 'bell_origin') {\n                    _Config__WEBPACK_IMPORTED_MODULE_4__[\"default\"].setBellApiOrigin(value);\n                    continue;\n                }\n                if (key === 'package_id') {\n                    _Config__WEBPACK_IMPORTED_MODULE_4__[\"default\"].setBellPackageId(value);\n                    queryObject['package_id'] = `${value}`;\n                    continue;\n                }\n                if (key === 'lesson_id') {\n                    _Config__WEBPACK_IMPORTED_MODULE_4__[\"default\"].setBellLessonId(value);\n                    queryObject['lesson_id'] = `${value}`;\n                    _util__WEBPACK_IMPORTED_MODULE_2__[\"util\"].writeServerCnfValue(\"lessonId\", value);\n                    continue;\n                }\n                if (key === 'back_url') {\n                    _Config__WEBPACK_IMPORTED_MODULE_4__[\"default\"].setBellBackUrl(value);\n                    queryObject['back_url'] = `${value}`;\n                    continue;\n                }\n                if (key === 'act_id') {\n                    _Config__WEBPACK_IMPORTED_MODULE_4__[\"default\"].setBellActId(value);\n                    queryObject['act_id'] = `${value}`;\n                    continue;\n                }\n                if (key === 'internet_network') {\n                    queryObject['gameServer'] = `${value}`;\n                    continue;\n                }\n                if (key === 'local_network') {\n                    if (!queryObject['gameServer']) {\n                        queryObject['gameServer'] = `${value}`;\n                    }\n                    continue;\n                }\n                //课程地图的gid\n                if (key === 'gid') {\n                    _logger__WEBPACK_IMPORTED_MODULE_1__[\"logger\"].log('net', `平台给的gid`, value);\n                    queryObject[key] = `${value}`;\n                    _util__WEBPACK_IMPORTED_MODULE_2__[\"util\"].writeServerCnfValue(\"gid\", value);\n                    continue;\n                }\n                if (key === 'stand_alone') {\n                    if (value === \"null\") {\n                        _Config__WEBPACK_IMPORTED_MODULE_4__[\"default\"].setStandAlone(false);\n                    }\n                    else {\n                        _Config__WEBPACK_IMPORTED_MODULE_4__[\"default\"].setStandAlone(!!value);\n                    }\n                    continue;\n                }\n                //过滤掉原始服务器\n                if (key === 'gameServer') {\n                    continue;\n                }\n                queryObject[key] = `${value}`;\n            }\n            _logger__WEBPACK_IMPORTED_MODULE_1__[\"logger\"].log('platform', 'queryObject', queryObject);\n            let token = yield this.login();\n            queryObject['token'] = token;\n            if (queryObject[\"gameServer\"]) {\n                _Message__WEBPACK_IMPORTED_MODULE_3__[\"default\"].sendIpcMsg('SAVE_NATIVE_GAME_SERVER', queryObject[\"gameServer\"]);\n            }\n            _logger__WEBPACK_IMPORTED_MODULE_1__[\"logger\"].log('platform', 'queryObject', queryObject);\n            return queryObject;\n        });\n    }\n    /** 登陆贝尔平台 */\n    login() {\n        let data = { temporary_token: _Config__WEBPACK_IMPORTED_MODULE_4__[\"default\"].bellTempToken };\n        if (_Config__WEBPACK_IMPORTED_MODULE_4__[\"default\"].bellToken) {\n            data[\"token\"] = _Config__WEBPACK_IMPORTED_MODULE_4__[\"default\"].bellToken;\n        }\n        _logger__WEBPACK_IMPORTED_MODULE_1__[\"logger\"].log('net', `请求登录贝尔平台, bellApiOrigin: ${_Config__WEBPACK_IMPORTED_MODULE_4__[\"default\"].bellApiOrigin}, bellTempToken:${_Config__WEBPACK_IMPORTED_MODULE_4__[\"default\"].bellTempToken}`);\n        return new Promise((resolve, reject) => {\n            _util__WEBPACK_IMPORTED_MODULE_2__[\"util\"].requestPostHttps(_Config__WEBPACK_IMPORTED_MODULE_4__[\"default\"].bellApiOrigin, null, '/common/member/login-by-temporary-token', data, null, (body) => {\n                _logger__WEBPACK_IMPORTED_MODULE_1__[\"logger\"].log('net', `登陆贝尔平台返回body`, body);\n                if (body.code === 200) {\n                    if (body.data.token) {\n                        _Config__WEBPACK_IMPORTED_MODULE_4__[\"default\"].setBellToken(body.data.token);\n                    }\n                    this.getMemberInfo(() => {\n                        resolve(_Config__WEBPACK_IMPORTED_MODULE_4__[\"default\"].bellToken);\n                    }, (err) => { reject(err); });\n                    _logger__WEBPACK_IMPORTED_MODULE_1__[\"logger\"].log('net', `登陆贝尔平台成功, token:${_Config__WEBPACK_IMPORTED_MODULE_4__[\"default\"].bellToken}`);\n                }\n                else {\n                    reject(body.msg);\n                    _logger__WEBPACK_IMPORTED_MODULE_1__[\"logger\"].error('net', `登陆贝尔平台失败`, body.msg);\n                }\n            }, (e) => {\n                reject(e);\n                _logger__WEBPACK_IMPORTED_MODULE_1__[\"logger\"].error('net', `登陆贝尔平台失败`, e);\n            });\n        });\n    }\n    /* let memberInfo = `{\n        \"user_info\": {\n            \"hash_id\": \"AWRl2okDEQ\",\n            \"userid\": 364021,\n            \"username\": \"wx523532\",\n            \"real_name\": \"wx523532\",\n            \"usertype\": \"1\",\n            \"avator\": \"https:\\/\\/thirdwx.qlogo.cn\\/mmopen\\/DZ05nsLmIvm1Box6FqiaWeNDgLib0V3n1jLtkicNYs2u5bicnC5PDRVoQz1z0JWwXeMppfPhQJFUCQClNwPsGsYcB9p1MM52eoQib\\/132\",\n            \"nickname\": \"Albert\",\n            \"gold_num\": 80,\n            \"code_num\": 40,\n            \"conch_num\": 0,\n            \"sex\": 1,\n            \"age\": 0,\n            \"is_incharge_teacher\": 0,\n            \"is_registration_finished\": false,\n            \"school\": {\n                \"id\": 6,\n                \"name\": \"\\u6d4b\\u8bd5\\u5b66\\u6821\",\n                \"school_type\": 1,\n                \"cooperation_type\": \"makcoo_joined\",\n                \"hash_id\": \"JMzR3lqrYk\"\n            },\n            \"phone\": \"\",\n            \"is_offline_business_user\": 0,\n            \"unlocked_level\": 0,\n            \"current_level\": 0,\n            \"is_certified_teacher\": 0,\n            \"is_wx_site_connected\": false,\n            \"is_wx_official_connected\": true\n        },\n        \"sys_info\": { \"lan\": \"cn\" }\n    }` */\n    /** 获取用户信息 */\n    getMemberInfo(successFunc, errorFunc) {\n        let data = { token: _Config__WEBPACK_IMPORTED_MODULE_4__[\"default\"].bellToken };\n        let headers = { \"X-Bellcode-Referer\": \"bellplanet\" };\n        _logger__WEBPACK_IMPORTED_MODULE_1__[\"logger\"].log('net', `请求获取贝尔平台用户信息`);\n        _util__WEBPACK_IMPORTED_MODULE_2__[\"util\"].requestGetHttps(_Config__WEBPACK_IMPORTED_MODULE_4__[\"default\"].bellApiOrigin, null, '/common/member/init', data, headers, (body) => {\n            if (body.code === 200) {\n                _Config__WEBPACK_IMPORTED_MODULE_4__[\"default\"].setUserType(+body.data.user_info.usertype);\n                _Config__WEBPACK_IMPORTED_MODULE_4__[\"default\"].setRealName(body.data.user_info.real_name);\n                _Config__WEBPACK_IMPORTED_MODULE_4__[\"default\"].setNickName(body.data.user_info.nickname);\n                _util__WEBPACK_IMPORTED_MODULE_2__[\"util\"].writeServerCnfValue(\"userId\", body.data.user_info.userid + \"\");\n                _util__WEBPACK_IMPORTED_MODULE_2__[\"util\"].writeServerCnfValue(\"schoolId\", body.data.user_info.school.id + \"\");\n                _util__WEBPACK_IMPORTED_MODULE_2__[\"util\"].writeServerCnfValue(\"nickName\", body.data.user_info.nickname + \"\");\n                _Message__WEBPACK_IMPORTED_MODULE_3__[\"default\"].sendIpcMsg('SAVE_NATIVE_LOGIN_RESPONSE', body);\n                _logger__WEBPACK_IMPORTED_MODULE_1__[\"logger\"].log('net', `获取贝尔平台用户信息成功`);\n                successFunc();\n            }\n            else {\n                errorFunc();\n                _logger__WEBPACK_IMPORTED_MODULE_1__[\"logger\"].error('net', `获取贝尔平台用户信息失败`, body.msg);\n            }\n        }, () => {\n            errorFunc();\n            _logger__WEBPACK_IMPORTED_MODULE_1__[\"logger\"].error('net', `获取贝尔平台用户信息失败`);\n        });\n    }\n    /** 老师上报ip */\n    teacherUploadIp() {\n        let data = { token: _Config__WEBPACK_IMPORTED_MODULE_4__[\"default\"].bellToken, class_id: _Config__WEBPACK_IMPORTED_MODULE_4__[\"default\"].classId };\n        //公网连接方式\n        if (_Config__WEBPACK_IMPORTED_MODULE_4__[\"default\"].gameServerNatUrl && _Config__WEBPACK_IMPORTED_MODULE_4__[\"default\"].gameServerNatPort) {\n            data['internet_network'] = `${_Config__WEBPACK_IMPORTED_MODULE_4__[\"default\"].gameServerNatUrl}:${_Config__WEBPACK_IMPORTED_MODULE_4__[\"default\"].gameServerNatPort}`;\n        }\n        else {\n            data['internet_network'] = ``;\n        }\n        //局域网连接方式\n        if (_Config__WEBPACK_IMPORTED_MODULE_4__[\"default\"].gameServerLocalIp && _Config__WEBPACK_IMPORTED_MODULE_4__[\"default\"].gameServerLocalPort) {\n            data['local_network'] = `${_Config__WEBPACK_IMPORTED_MODULE_4__[\"default\"].gameServerLocalIp}:${_Config__WEBPACK_IMPORTED_MODULE_4__[\"default\"].gameServerLocalPort}`;\n        }\n        else {\n            data['local_network'] = ``;\n        }\n        _logger__WEBPACK_IMPORTED_MODULE_1__[\"logger\"].log('net', `请求上报老师ip`);\n        _util__WEBPACK_IMPORTED_MODULE_2__[\"util\"].requestPostHttps(_Config__WEBPACK_IMPORTED_MODULE_4__[\"default\"].bellApiOrigin, null, '/teacher/bellplanet-origins.put', data, null, (body) => {\n            if (body.code === 200) {\n                _logger__WEBPACK_IMPORTED_MODULE_1__[\"logger\"].log('net', `上报老师ip成功`);\n            }\n            else {\n                _logger__WEBPACK_IMPORTED_MODULE_1__[\"logger\"].error('net', `上报老师ip失败`);\n            }\n        }, () => {\n            _logger__WEBPACK_IMPORTED_MODULE_1__[\"logger\"].error('net', `上报老师ip失败`);\n        });\n    }\n}\nlet platform = new Platform();\n/* harmony default export */ __webpack_exports__[\"default\"] = (platform);\n\n\n//# sourceURL=webpack:///./src/main/Platform.ts?");

/***/ }),

/***/ "./src/main/Server.ts":
/*!****************************!*\
  !*** ./src/main/Server.ts ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var os__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! os */ \"os\");\n/* harmony import */ var os__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(os__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var tree_kill__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tree-kill */ \"./node_modules/tree-kill/index.js\");\n/* harmony import */ var tree_kill__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(tree_kill__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var http__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! http */ \"http\");\n/* harmony import */ var http__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(http__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! url */ \"url\");\n/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(url__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./util */ \"./src/main/util.ts\");\n/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./logger */ \"./src/main/logger.ts\");\n/* harmony import */ var _define__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./define */ \"./src/main/define.ts\");\n/* harmony import */ var _Config__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Config */ \"./src/main/Config.ts\");\n/* harmony import */ var _Platform__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./Platform */ \"./src/main/Platform.ts\");\n/* harmony import */ var _Message__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./Message */ \"./src/main/Message.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/**\n * @author 雪糕\n * @desc 处理native服务器和游戏服务器的文件\n * @date 2020-02-18 11:42:29\n * @Last Modified by: 雪糕\n * @Last Modified time: 2020-03-23 19:27:12\n */\n\n\n\n\n\n\n\n\n\n\n\nclass Server {\n    init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            _util__WEBPACK_IMPORTED_MODULE_5__[\"util\"].writeServerCnfValue('gameArgs', \"\");\n            yield this.createNativeServer(_define__WEBPACK_IMPORTED_MODULE_7__[\"define\"].eGameServerMode.gameMap);\n        });\n    }\n    /** 创建native服务器 */\n    createNativeServer(gameServerMode) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (_Config__WEBPACK_IMPORTED_MODULE_8__[\"default\"].nativeServer) {\n                _logger__WEBPACK_IMPORTED_MODULE_6__[\"logger\"].log('net', `关闭旧的native服务器`);\n                _Config__WEBPACK_IMPORTED_MODULE_8__[\"default\"].setGameServerInited(false);\n                yield this.closeNativeServer();\n            }\n            _logger__WEBPACK_IMPORTED_MODULE_6__[\"logger\"].log('net', '开始创建native服务器');\n            let nativeServer = http__WEBPACK_IMPORTED_MODULE_3___default.a.createServer();\n            _Config__WEBPACK_IMPORTED_MODULE_8__[\"default\"].setNativeServer(nativeServer);\n            _Config__WEBPACK_IMPORTED_MODULE_8__[\"default\"].nativeServer.listen(0);\n            _Config__WEBPACK_IMPORTED_MODULE_8__[\"default\"].nativeServer.on('listening', () => __awaiter(this, void 0, void 0, function* () {\n                _Config__WEBPACK_IMPORTED_MODULE_8__[\"default\"].setNativeServerPort(_Config__WEBPACK_IMPORTED_MODULE_8__[\"default\"].nativeServer.address().port);\n                _logger__WEBPACK_IMPORTED_MODULE_6__[\"logger\"].log('net', '创建native服务器成功,端口号', _Config__WEBPACK_IMPORTED_MODULE_8__[\"default\"].nativeServerPort);\n                yield _util__WEBPACK_IMPORTED_MODULE_5__[\"util\"].writeServerCnfValue('channel', _Config__WEBPACK_IMPORTED_MODULE_8__[\"default\"].channel);\n                yield _util__WEBPACK_IMPORTED_MODULE_5__[\"util\"].writeServerCnfValue(\"nativePort\", _Config__WEBPACK_IMPORTED_MODULE_8__[\"default\"].nativeServerPort + \"\");\n                yield this.createGameServer(gameServerMode);\n            }));\n            _Config__WEBPACK_IMPORTED_MODULE_8__[\"default\"].nativeServer.on('request', (req, res) => {\n                let urlObj = url__WEBPACK_IMPORTED_MODULE_4___default.a.parse(req.url, true);\n                let args = urlObj.query;\n                let pathname = urlObj.pathname;\n                _logger__WEBPACK_IMPORTED_MODULE_6__[\"logger\"].log('net', `收到游戏服务器消息 pathname:${pathname} args`, args);\n                if (pathname === \"/serverState\") {\n                    if (_Config__WEBPACK_IMPORTED_MODULE_8__[\"default\"].gameServerInited) {\n                        _logger__WEBPACK_IMPORTED_MODULE_6__[\"logger\"].log('net', '判断游戏服务器已经启动了,不用操作');\n                        res.end();\n                        return;\n                    }\n                    _Config__WEBPACK_IMPORTED_MODULE_8__[\"default\"].setGameServerInited(true);\n                    _logger__WEBPACK_IMPORTED_MODULE_6__[\"logger\"].log('net', '收到游戏服务器启动完毕消息');\n                    _Config__WEBPACK_IMPORTED_MODULE_8__[\"default\"].setGameServerLocalIp(args.localIp);\n                    _Config__WEBPACK_IMPORTED_MODULE_8__[\"default\"].setGameServerLocalPort(args.localPort);\n                    _Config__WEBPACK_IMPORTED_MODULE_8__[\"default\"].setGameServerNatUrl(args.natUrl);\n                    _Config__WEBPACK_IMPORTED_MODULE_8__[\"default\"].setGameServerNatPort(args.natPort);\n                    _logger__WEBPACK_IMPORTED_MODULE_6__[\"logger\"].log('net', `gameServer --> localIp:${_Config__WEBPACK_IMPORTED_MODULE_8__[\"default\"].gameServerLocalIp} localPort:${_Config__WEBPACK_IMPORTED_MODULE_8__[\"default\"].gameServerLocalPort} natUrl:${_Config__WEBPACK_IMPORTED_MODULE_8__[\"default\"].gameServerNatUrl} natPort:${_Config__WEBPACK_IMPORTED_MODULE_8__[\"default\"].gameServerNatPort}`);\n                    if (_Config__WEBPACK_IMPORTED_MODULE_8__[\"default\"].gameServerLocalIp && _Config__WEBPACK_IMPORTED_MODULE_8__[\"default\"].gameServerLocalPort) {\n                        let gameServer = `${_Config__WEBPACK_IMPORTED_MODULE_8__[\"default\"].gameServerLocalIp}:${_Config__WEBPACK_IMPORTED_MODULE_8__[\"default\"].gameServerLocalPort}`;\n                        _logger__WEBPACK_IMPORTED_MODULE_6__[\"logger\"].log('net', 'native上课客户端登录本地游戏服务器', gameServer);\n                        //游戏地图\n                        if (_Config__WEBPACK_IMPORTED_MODULE_8__[\"default\"].gameServerMode === _define__WEBPACK_IMPORTED_MODULE_7__[\"define\"].eGameServerMode.gameMap) {\n                            _Message__WEBPACK_IMPORTED_MODULE_10__[\"default\"].sendMsgToClient('nativeSignIn', gameServer);\n                        }\n                        //模板地图\n                        else if (_Config__WEBPACK_IMPORTED_MODULE_8__[\"default\"].gameServerMode === _define__WEBPACK_IMPORTED_MODULE_7__[\"define\"].eGameServerMode.mapTemplate) {\n                            _Message__WEBPACK_IMPORTED_MODULE_10__[\"default\"].sendMsgToClient('enterMapTemplate', gameServer);\n                        }\n                        //模板地图房间\n                        else if (_Config__WEBPACK_IMPORTED_MODULE_8__[\"default\"].gameServerMode === _define__WEBPACK_IMPORTED_MODULE_7__[\"define\"].eGameServerMode.mapTemplateRoom) {\n                            _Message__WEBPACK_IMPORTED_MODULE_10__[\"default\"].sendMsgToClient('enterMapTemplateRoom', gameServer);\n                        }\n                        else {\n                            //reserve\n                        }\n                    }\n                    //上课渠道 并且是老师端,要上报本地ip\n                    if (_Config__WEBPACK_IMPORTED_MODULE_8__[\"default\"].channel === _Config__WEBPACK_IMPORTED_MODULE_8__[\"default\"].constChannelLesson && _Config__WEBPACK_IMPORTED_MODULE_8__[\"default\"].userType != _define__WEBPACK_IMPORTED_MODULE_7__[\"define\"].eUserType.student) {\n                        _Platform__WEBPACK_IMPORTED_MODULE_9__[\"default\"].teacherUploadIp();\n                    }\n                    //关闭服务器推送\n                    let path = `/native?controlType=receiveStart`;\n                    _util__WEBPACK_IMPORTED_MODULE_5__[\"util\"].requestGetHttp(_Config__WEBPACK_IMPORTED_MODULE_8__[\"default\"].gameServerLocalIp, _Config__WEBPACK_IMPORTED_MODULE_8__[\"default\"].gameServerLocalPort, path, null, null, () => {\n                        _logger__WEBPACK_IMPORTED_MODULE_6__[\"logger\"].log('net', `关闭游戏服务器启动推送成功`);\n                    }, () => {\n                        _logger__WEBPACK_IMPORTED_MODULE_6__[\"logger\"].error('net', `关闭游戏服务器启动推送错误`);\n                    });\n                }\n                // res.end('hello world !');\n                res.end();\n            });\n        });\n    }\n    /** 关闭native服务器 */\n    closeNativeServer() {\n        return new Promise((resolve, reject) => {\n            if (!_Config__WEBPACK_IMPORTED_MODULE_8__[\"default\"].nativeServer) {\n                resolve();\n                return;\n            }\n            _Config__WEBPACK_IMPORTED_MODULE_8__[\"default\"].nativeServer.close((err) => {\n                if (err) {\n                    _logger__WEBPACK_IMPORTED_MODULE_6__[\"logger\"].error('net', `关闭native服务器失败`, err);\n                }\n                else {\n                    _logger__WEBPACK_IMPORTED_MODULE_6__[\"logger\"].log('net', `关闭native服务器成功`);\n                }\n                _Config__WEBPACK_IMPORTED_MODULE_8__[\"default\"].setNativeServer(null);\n                resolve();\n            });\n        });\n    }\n    // 设置游戏运行权限\n    assignGameXPermission(paths) {\n        return new Promise((resolve, reject) => {\n            for (let path of paths) {\n                fs__WEBPACK_IMPORTED_MODULE_0___default.a.chmod(path, fs__WEBPACK_IMPORTED_MODULE_0___default.a.constants.S_IXUSR, (err) => {\n                    if (err) {\n                        reject(err);\n                    }\n                });\n            }\n            resolve();\n        });\n    }\n    /** 创建游戏服务器 */\n    createGameServer(mode) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (_Config__WEBPACK_IMPORTED_MODULE_8__[\"default\"].gameServerProcess) {\n                _logger__WEBPACK_IMPORTED_MODULE_6__[\"logger\"].log('net', `关闭旧的游戏服务器`);\n                yield this.closeGameServer();\n            }\n            _logger__WEBPACK_IMPORTED_MODULE_6__[\"logger\"].log('net', '创建游戏服务器');\n            _Config__WEBPACK_IMPORTED_MODULE_8__[\"default\"].setGameServerMode(mode);\n            let cmd;\n            if (os__WEBPACK_IMPORTED_MODULE_1___default.a.platform() === \"win32\") {\n                cmd = `game`;\n            }\n            else {\n                cmd = `./game`;\n                this.assignGameXPermission([\n                    `${_Config__WEBPACK_IMPORTED_MODULE_8__[\"default\"].rootPath}/package/server/game`,\n                    `${_Config__WEBPACK_IMPORTED_MODULE_8__[\"default\"].rootPath}/package/server/ngrok`\n                ]);\n            }\n            let gameServerProcess = yield _util__WEBPACK_IMPORTED_MODULE_5__[\"util\"].runCmd(cmd, `${_Config__WEBPACK_IMPORTED_MODULE_8__[\"default\"].rootPath}/package/server/`, \"创建游戏服务器成功\", \"创建游戏服务器失败\");\n            _Config__WEBPACK_IMPORTED_MODULE_8__[\"default\"].setGameServerProcess(gameServerProcess);\n        });\n    }\n    /** 关闭游戏服务器 */\n    closeGameServer() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                if (!_Config__WEBPACK_IMPORTED_MODULE_8__[\"default\"].gameServerProcess) {\n                    resolve();\n                    return;\n                }\n                if (!_Config__WEBPACK_IMPORTED_MODULE_8__[\"default\"].gameServerInited) {\n                    // let cmdStr = \"taskkill /im game.exe /f\";\n                    // util.runCmd(cmdStr, null, `关闭游戏服务器成功`, \"关闭游戏服务器错误\");\n                    _logger__WEBPACK_IMPORTED_MODULE_6__[\"logger\"].log('net', `关闭游戏服务器`);\n                    tree_kill__WEBPACK_IMPORTED_MODULE_2___default()(_Config__WEBPACK_IMPORTED_MODULE_8__[\"default\"].gameServerProcess.pid, (error) => {\n                        reject(error);\n                    });\n                    _Config__WEBPACK_IMPORTED_MODULE_8__[\"default\"].setGameServerProcess(null);\n                    return;\n                }\n                let path = `/native?controlType=closeServer`;\n                _util__WEBPACK_IMPORTED_MODULE_5__[\"util\"].requestGetHttp(_Config__WEBPACK_IMPORTED_MODULE_8__[\"default\"].gameServerLocalIp, _Config__WEBPACK_IMPORTED_MODULE_8__[\"default\"].gameServerLocalPort, path, null, null, () => {\n                    _logger__WEBPACK_IMPORTED_MODULE_6__[\"logger\"].log('net', `关闭游戏服务器成功`);\n                    _Config__WEBPACK_IMPORTED_MODULE_8__[\"default\"].setGameServerProcess(null);\n                    resolve();\n                }, () => {\n                    _logger__WEBPACK_IMPORTED_MODULE_6__[\"logger\"].error('net', `关闭游戏服务器错误`);\n                    _Config__WEBPACK_IMPORTED_MODULE_8__[\"default\"].setGameServerProcess(null);\n                    resolve();\n                });\n            });\n        });\n    }\n}\nlet server = new Server();\n/* harmony default export */ __webpack_exports__[\"default\"] = (server);\n\n\n//# sourceURL=webpack:///./src/main/Server.ts?");

/***/ }),

/***/ "./src/main/define.ts":
/*!****************************!*\
  !*** ./src/main/define.ts ***!
  \****************************/
/*! exports provided: define */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"define\", function() { return define; });\n/**\n * @author 雪糕\n * @desc 全局定义\n * @date 2020-03-21 14:52:44\n * @Last Modified by: 雪糕\n * @Last Modified time: 2020-03-23 19:14:27\n */\nvar define;\n(function (define) {\n    /** 分支枚举 */\n    let eEnvironName;\n    (function (eEnvironName) {\n        eEnvironName[\"beta\"] = \"beta\";\n        eEnvironName[\"ready\"] = \"ready\";\n        eEnvironName[\"release\"] = \"release\";\n    })(eEnvironName = define.eEnvironName || (define.eEnvironName = {}));\n    /** 路由枚举 */\n    let eLessonRouter;\n    (function (eLessonRouter) {\n        eLessonRouter[\"createMap\"] = \"createMap\";\n        eLessonRouter[\"banner\"] = \"banner\";\n    })(eLessonRouter = define.eLessonRouter || (define.eLessonRouter = {}));\n    /** 用户类型枚举，教师端，学生端，机构端 */\n    let eUserType;\n    (function (eUserType) {\n        eUserType[eUserType[\"student\"] = 1] = \"student\";\n        eUserType[eUserType[\"teacher\"] = 2] = \"teacher\";\n        eUserType[eUserType[\"system\"] = 3] = \"system\";\n        eUserType[eUserType[\"institution\"] = 4] = \"institution\";\n        eUserType[eUserType[\"tutor\"] = 5] = \"tutor\";\n        eUserType[eUserType[\"lessonsDevelop\"] = 99] = \"lessonsDevelop\";\n    })(eUserType = define.eUserType || (define.eUserType = {}));\n    /** 游戏服务器模式 */\n    let eGameServerMode;\n    (function (eGameServerMode) {\n        eGameServerMode[eGameServerMode[\"gameMap\"] = 1] = \"gameMap\";\n        eGameServerMode[eGameServerMode[\"mapTemplate\"] = 2] = \"mapTemplate\";\n        eGameServerMode[eGameServerMode[\"mapTemplateRoom\"] = 3] = \"mapTemplateRoom\";\n    })(eGameServerMode = define.eGameServerMode || (define.eGameServerMode = {}));\n    /** native模式 */\n    let eNativeMode;\n    (function (eNativeMode) {\n        eNativeMode[eNativeMode[\"game\"] = 1] = \"game\";\n        eNativeMode[eNativeMode[\"website\"] = 2] = \"website\";\n        eNativeMode[eNativeMode[\"platform\"] = 3] = \"platform\";\n        eNativeMode[eNativeMode[\"createMap\"] = 4] = \"createMap\";\n        eNativeMode[eNativeMode[\"mapTemplate\"] = 5] = \"mapTemplate\";\n        eNativeMode[eNativeMode[\"mapTemplateRoom\"] = 6] = \"mapTemplateRoom\";\n        eNativeMode[eNativeMode[\"banner\"] = 7] = \"banner\";\n    })(eNativeMode = define.eNativeMode || (define.eNativeMode = {}));\n    /** localStorageKey */\n    let eLocalStorageKey;\n    (function (eLocalStorageKey) {\n        eLocalStorageKey[\"nativeToken\"] = \"nativeToken\";\n        eLocalStorageKey[\"nativeGameServer\"] = \"nativeLoginResponse\";\n        eLocalStorageKey[\"nativeLoginResponse\"] = \"nativeLoginResponse\";\n    })(eLocalStorageKey = define.eLocalStorageKey || (define.eLocalStorageKey = {}));\n})(define || (define = {}));\n\n\n//# sourceURL=webpack:///./src/main/define.ts?");

/***/ }),

/***/ "./src/main/logger.ts":
/*!****************************!*\
  !*** ./src/main/logger.ts ***!
  \****************************/
/*! exports provided: logger */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"logger\", function() { return logger; });\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Config */ \"./src/main/Config.ts\");\n/**\n * @author 雪糕\n * @desc main用的logger类\n * @date 2020-02-13 14:54:34\n * @Last Modified by: 雪糕\n * @Last Modified time: 2020-03-23 18:48:10\n */\n\n\nvar logger;\n(function (logger) {\n    let processLogContent;\n    let webContentsLogContent;\n    function init() {\n        processLogContent = '';\n        webContentsLogContent = '';\n        fs__WEBPACK_IMPORTED_MODULE_0___default.a.writeFileSync(`${_Config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].rootPath}/dist/log/ipcRenderer.log`, '');\n    }\n    logger.init = init;\n    /** 打印log到后台进程日志中 */\n    function processLog(tag, msg, ...args) {\n        let content = formateMsg(tag, msg, ...args);\n        content = content.replace(/\\\\n/g, '\\r\\n');\n        processLogContent += content + '\\r\\n';\n        fs__WEBPACK_IMPORTED_MODULE_0___default.a.writeFileSync(_Config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].processLogPath, processLogContent);\n    }\n    logger.processLog = processLog;\n    /** 打印web端log到本地日志文件中 */\n    function webContentsLog(tag, msg, ...args) {\n        let content = formateMsg(tag, msg, ...args);\n        content = content.replace(/\\\\n/g, '\\r\\n');\n        webContentsLogContent += content + '\\r\\n';\n        fs__WEBPACK_IMPORTED_MODULE_0___default.a.writeFileSync(_Config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].ipcMainLogPath, webContentsLogContent);\n    }\n    logger.webContentsLog = webContentsLog;\n    /** 打印日志 */\n    function log(tag, msg, ...args) {\n        let content = formateMsg(tag, msg, ...args);\n        if (_Config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].mainWindow && _Config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].mainWindow.isEnabled && _Config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].mainWindow.webContents) {\n            _Config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].mainWindow.webContents.executeJavaScript(`console.log(\\'${content}\\');`);\n            webContentsLog(tag, msg, ...args);\n        }\n        else {\n            processLog(tag, msg, ...args);\n        }\n    }\n    logger.log = log;\n    /** 打印错误 */\n    function error(tag, msg, ...args) {\n        let content = formateMsg(tag, msg, ...args);\n        if (_Config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].mainWindow && _Config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].mainWindow.isEnabled && _Config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].mainWindow.webContents) {\n            _Config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].mainWindow.webContents.executeJavaScript(`console.error(\\'${content}\\');`);\n            webContentsLog(tag, msg, ...args);\n        }\n        else {\n            processLog(tag, msg, ...args);\n        }\n    }\n    logger.error = error;\n    /** 打印警告 */\n    function warn(tag, msg, ...args) {\n        let content = formateMsg(tag, msg, ...args);\n        if (_Config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].mainWindow && _Config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].mainWindow.isEnabled && _Config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].mainWindow.webContents) {\n            _Config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].mainWindow.webContents.executeJavaScript(`console.warn(\\'${content}\\');`);\n            webContentsLog(tag, msg, ...args);\n        }\n        else {\n            processLog(tag, msg, ...args);\n        }\n    }\n    logger.warn = warn;\n    /** 打印信息 */\n    function info(tag, msg, ...args) {\n        let content = formateMsg(tag, msg, ...args);\n        if (_Config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].mainWindow && _Config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].mainWindow.isEnabled && _Config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].mainWindow.webContents) {\n            _Config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].mainWindow.webContents.executeJavaScript(`console.info(\\'${content}\\');`);\n            webContentsLog(tag, msg, ...args);\n        }\n        else {\n            processLog(tag, msg, ...args);\n        }\n    }\n    logger.info = info;\n    /** 格式化消息 */\n    function formateMsg(tag, msg, ...args) {\n        let date = formatDate(new Date());\n        let argStr = args && args.length > 0 ? `:${JSON.stringify(args)}` : \"\";\n        let content = `[native][${tag}]${date}\\t${msg}${argStr}`;\n        return content;\n    }\n    logger.formateMsg = formateMsg;\n    /** 格式化时间 */\n    function formatDate(date) {\n        let month = date.getMonth() + 1;\n        let format = `${date.getFullYear()}-${month}-${date.getDate()} ${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`;\n        return format;\n    }\n    logger.formatDate = formatDate;\n})(logger || (logger = {}));\n\n\n//# sourceURL=webpack:///./src/main/logger.ts?");

/***/ }),

/***/ "./src/main/main.ts":
/*!**************************!*\
  !*** ./src/main/main.ts ***!
  \**************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var electron__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! electron */ \"electron\");\n/* harmony import */ var electron__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(electron__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var process__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! process */ \"process\");\n/* harmony import */ var process__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(process__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _define__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./define */ \"./src/main/define.ts\");\n/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./logger */ \"./src/main/logger.ts\");\n/* harmony import */ var _Config__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Config */ \"./src/main/Config.ts\");\n/* harmony import */ var _Server__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Server */ \"./src/main/Server.ts\");\n/* harmony import */ var _Message__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Message */ \"./src/main/Message.ts\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./util */ \"./src/main/util.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/**\n * @author 雪糕\n * @desc main主程序文件\n * @date 2020-02-18 11:42:51\n * @Last Modified by: 雪糕\n * @Last Modified time: 2020-03-23 19:29:20\n */\n// Modules to control application life and create native browser window\n\n\n\n\n\n\n\n\n\nlet mainWindow;\n//native初始化\nfunction initNative() {\n    return __awaiter(this, void 0, void 0, function* () {\n        _logger__WEBPACK_IMPORTED_MODULE_4__[\"logger\"].log('net', `urlValue: ${_Config__WEBPACK_IMPORTED_MODULE_5__[\"default\"].urlValue}`);\n        if (_Config__WEBPACK_IMPORTED_MODULE_5__[\"default\"].urlValue.indexOf(_Config__WEBPACK_IMPORTED_MODULE_5__[\"default\"].constPseudoProtocol) === -1) {\n            _Config__WEBPACK_IMPORTED_MODULE_5__[\"default\"].setNativeMode(_define__WEBPACK_IMPORTED_MODULE_3__[\"define\"].eNativeMode.website);\n        }\n        else {\n            //设置路由\n            let lessonRouter = _Config__WEBPACK_IMPORTED_MODULE_5__[\"default\"].urlValue.replace(_Config__WEBPACK_IMPORTED_MODULE_5__[\"default\"].constPseudoProtocol, '');\n            lessonRouter = lessonRouter.slice(0, lessonRouter.indexOf(\"?\") - 1);\n            _Config__WEBPACK_IMPORTED_MODULE_5__[\"default\"].setLessonRouter(lessonRouter);\n            //创造地图模式\n            if (_Config__WEBPACK_IMPORTED_MODULE_5__[\"default\"].lessonRouter === _define__WEBPACK_IMPORTED_MODULE_3__[\"define\"].eLessonRouter.createMap) {\n                _Config__WEBPACK_IMPORTED_MODULE_5__[\"default\"].setNativeMode(_define__WEBPACK_IMPORTED_MODULE_3__[\"define\"].eNativeMode.createMap);\n            }\n            else if (_Config__WEBPACK_IMPORTED_MODULE_5__[\"default\"].lessonRouter === _define__WEBPACK_IMPORTED_MODULE_3__[\"define\"].eLessonRouter.banner) {\n                _Config__WEBPACK_IMPORTED_MODULE_5__[\"default\"].setNativeMode(_define__WEBPACK_IMPORTED_MODULE_3__[\"define\"].eNativeMode.banner);\n            }\n            else {\n                _Config__WEBPACK_IMPORTED_MODULE_5__[\"default\"].setNativeMode(_define__WEBPACK_IMPORTED_MODULE_3__[\"define\"].eNativeMode.platform);\n            }\n        }\n        yield mainWindow.loadFile(`./dist/renderer.html`);\n        _logger__WEBPACK_IMPORTED_MODULE_4__[\"logger\"].log('net', `config.urlValue`, _Config__WEBPACK_IMPORTED_MODULE_5__[\"default\"].urlValue);\n    });\n}\n//创建游戏浏览窗口\nfunction createWindow() {\n    return __awaiter(this, void 0, void 0, function* () {\n        mainWindow = new electron__WEBPACK_IMPORTED_MODULE_0__[\"BrowserWindow\"]({\n            width: 1600,\n            height: 900,\n            webPreferences: {\n                // preload: `${config.rootPath}/dist/renderer/renderer.js`,\n                nodeIntegration: true,\n                webSecurity: false\n            }\n        });\n        _Config__WEBPACK_IMPORTED_MODULE_5__[\"default\"].setMainWindow(mainWindow);\n        // 判断创建文件\n        if (!fs__WEBPACK_IMPORTED_MODULE_1__[\"existsSync\"](`${_Config__WEBPACK_IMPORTED_MODULE_5__[\"default\"].rootPath}/package`)) {\n            fs__WEBPACK_IMPORTED_MODULE_1__[\"mkdirSync\"](`${_Config__WEBPACK_IMPORTED_MODULE_5__[\"default\"].rootPath}/package`);\n        }\n        if (!fs__WEBPACK_IMPORTED_MODULE_1__[\"existsSync\"](`${_Config__WEBPACK_IMPORTED_MODULE_5__[\"default\"].rootPath}/package/client`)) {\n            fs__WEBPACK_IMPORTED_MODULE_1__[\"mkdirSync\"](`${_Config__WEBPACK_IMPORTED_MODULE_5__[\"default\"].rootPath}/package/client`);\n        }\n        if (!fs__WEBPACK_IMPORTED_MODULE_1__[\"existsSync\"](`${_Config__WEBPACK_IMPORTED_MODULE_5__[\"default\"].rootPath}/package/server`)) {\n            fs__WEBPACK_IMPORTED_MODULE_1__[\"mkdirSync\"](`${_Config__WEBPACK_IMPORTED_MODULE_5__[\"default\"].rootPath}/package/server`);\n        }\n        let userAgent = mainWindow.webContents.userAgent + \" BellCodeIpadWebView BellplanetNative\";\n        mainWindow.webContents.userAgent = userAgent;\n        /** 设置url参数 */\n        _Config__WEBPACK_IMPORTED_MODULE_5__[\"default\"].setUrlValue(process__WEBPACK_IMPORTED_MODULE_2__[\"argv\"][process__WEBPACK_IMPORTED_MODULE_2__[\"argv\"].length - 1]);\n        /** 初始化消息处理类 */\n        _Message__WEBPACK_IMPORTED_MODULE_7__[\"default\"].init();\n        //日志初始化\n        _logger__WEBPACK_IMPORTED_MODULE_4__[\"logger\"].init();\n        _logger__WEBPACK_IMPORTED_MODULE_4__[\"logger\"].log('main', `收到参数1: ${JSON.stringify(process__WEBPACK_IMPORTED_MODULE_2__[\"argv\"])}`);\n        //native初始化\n        initNative();\n        // Open the DevTools.\n        mainWindow.webContents.openDevTools();\n        mainWindow.webContents.on('crashed', () => {\n            // const options = {\n            //   type: 'error',\n            //   title: '进程崩溃了',\n            //   message: '这个进程已经崩溃.',\n            //   buttons: ['重载', '退出'],\n            // };\n            recordCrash().then(() => {\n                // dialog.showMessageBox(options, (index) => {\n                //   if (index === 0) {\n                //     reloadWindow(mainWindow);\n                //   } else {\n                //     app.quit();\n                //   }\n                // });\n            }).catch((e) => {\n                console.log('err', e);\n            });\n        });\n        function recordCrash() {\n            return new Promise(resolve => {\n                // 崩溃日志请求成功.... \n                resolve();\n            });\n        }\n        //监听窗口关闭\n        mainWindow.on('closed', () => __awaiter(this, void 0, void 0, function* () {\n            // Dereference the window object, usually you would store windows\n            // in an array if your app supports multi windows, this is the time\n            // when you should delete the corresponding element.\n            mainWindow = null;\n            _Config__WEBPACK_IMPORTED_MODULE_5__[\"default\"].setMainWindow(null);\n            yield _Server__WEBPACK_IMPORTED_MODULE_6__[\"default\"].closeGameServer();\n        }));\n        // 拦截new-window事件，起到拦截window.open的作用\n        mainWindow.webContents.on('new-window', (event, url) => __awaiter(this, void 0, void 0, function* () {\n            // 阻止创建默认窗口\n            event.preventDefault();\n            _logger__WEBPACK_IMPORTED_MODULE_4__[\"logger\"].log('electron', `new-window: ${url}`);\n            yield mainWindow.loadURL(url);\n        }));\n        // 拦截new-window事件，起到拦截window.open的作用\n        mainWindow.webContents.on('will-navigate', (event, url) => __awaiter(this, void 0, void 0, function* () {\n            const tokenField = \"webviewToken\";\n            const newURL = new URL(url);\n            const hash = newURL.hash;\n            _logger__WEBPACK_IMPORTED_MODULE_4__[\"logger\"].log('platform', `config.environName`, _Config__WEBPACK_IMPORTED_MODULE_5__[\"default\"].environName);\n            if (_Config__WEBPACK_IMPORTED_MODULE_5__[\"default\"].environName) {\n                let cookies = yield electron__WEBPACK_IMPORTED_MODULE_0__[\"session\"].defaultSession.cookies.get({});\n                let domain;\n                if (_Config__WEBPACK_IMPORTED_MODULE_5__[\"default\"].environName === _define__WEBPACK_IMPORTED_MODULE_3__[\"define\"].eEnvironName.ready) {\n                    domain = _Config__WEBPACK_IMPORTED_MODULE_5__[\"default\"].readyTokenDomain;\n                }\n                else {\n                    domain = _Config__WEBPACK_IMPORTED_MODULE_5__[\"default\"].releaseTokenDomain;\n                }\n                // logger.log('platform', `cookies`, cookies);\n                let cookie = cookies.find(value => value.name === \"token\" && value.domain === domain);\n                if (cookie) {\n                    _util__WEBPACK_IMPORTED_MODULE_8__[\"util\"].setGlobalConfigValue(\"token\", cookie.value);\n                }\n                else {\n                    _util__WEBPACK_IMPORTED_MODULE_8__[\"util\"].setGlobalConfigValue(\"token\", \"\");\n                }\n            }\n            //江哥写的特殊处理平台locationBuilder的代码\n            const searchParams = (new URL(`https://bai.com${hash.slice(1)}`)).searchParams;\n            if (newURL.searchParams.has(tokenField)\n                || searchParams.has(tokenField)) {\n                return;\n            }\n            // 阻止创建默认窗口\n            event.preventDefault();\n            if (_Config__WEBPACK_IMPORTED_MODULE_5__[\"default\"].bellToken) {\n                newURL.searchParams.set(tokenField, _Config__WEBPACK_IMPORTED_MODULE_5__[\"default\"].bellToken);\n            }\n            _logger__WEBPACK_IMPORTED_MODULE_4__[\"logger\"].log('electron', `will-navigate: ${newURL}`);\n            yield mainWindow.loadURL(newURL.toString());\n        }));\n        //设置菜单\n        // const menu = Menu.buildFromTemplate(template);\n        // Menu.setApplicationMenu(menu);\n        electron__WEBPACK_IMPORTED_MODULE_0__[\"Menu\"].setApplicationMenu(null);\n    });\n}\n// This method will be called when Electron has finished\n// initialization and is ready to create browser windows.\n// Some APIs can only be used after this event occurs.\n//限制只启用一个程序\nconst gotTheLock = electron__WEBPACK_IMPORTED_MODULE_0__[\"app\"].requestSingleInstanceLock();\nif (!gotTheLock) {\n    electron__WEBPACK_IMPORTED_MODULE_0__[\"app\"].quit();\n}\nconst onGotTheLock = (url) => __awaiter(void 0, void 0, void 0, function* () {\n    _logger__WEBPACK_IMPORTED_MODULE_4__[\"logger\"].log('electron', `运行第二个实例`);\n    if (mainWindow) {\n        if (mainWindow.isMinimized()) {\n            mainWindow.restore();\n        }\n        mainWindow.focus();\n        mainWindow.show();\n        _logger__WEBPACK_IMPORTED_MODULE_4__[\"logger\"].log('electron', `显示当前主窗口`);\n        // 关闭之前的服务器\n        yield _Server__WEBPACK_IMPORTED_MODULE_6__[\"default\"].closeGameServer();\n        /** 设置url参数 */\n        _Config__WEBPACK_IMPORTED_MODULE_5__[\"default\"].setUrlValue(url);\n        initNative();\n    }\n});\nelectron__WEBPACK_IMPORTED_MODULE_0__[\"app\"].on('second-instance', (event, argv, workingDirectory) => __awaiter(void 0, void 0, void 0, function* () {\n    // 当运行第二个实例时,将会聚焦到mainWindow这个窗口\n    if (process__WEBPACK_IMPORTED_MODULE_2__[\"platform\"] === 'win32') {\n        onGotTheLock(argv[argv.length - 1]);\n    }\n    _logger__WEBPACK_IMPORTED_MODULE_4__[\"logger\"].log('main', `收到参数: ${JSON.stringify(argv)}, ${JSON.stringify(process__WEBPACK_IMPORTED_MODULE_2__[\"argv\"])}`);\n}));\nelectron__WEBPACK_IMPORTED_MODULE_0__[\"app\"].on('open-url', function (event, url) {\n    onGotTheLock(url);\n});\nelectron__WEBPACK_IMPORTED_MODULE_0__[\"app\"].on('ready', () => {\n    createWindow();\n    //检测杀game进程\n    //let cmdStr = \"taskkill /im game.exe /f\";\n    //util.runCmd(cmdStr, null, `关闭游戏服务器成功`, \"关闭游戏服务器错误\");\n    let shortCut = \"\";\n    if (process__WEBPACK_IMPORTED_MODULE_2__[\"platform\"] === 'darwin') {\n        shortCut = 'Alt+Command+I';\n    }\n    else {\n        shortCut = 'Ctrl+Shift+I';\n    }\n    electron__WEBPACK_IMPORTED_MODULE_0__[\"globalShortcut\"].register(shortCut, () => {\n        mainWindow.webContents.openDevTools();\n    });\n});\n// Quit when all windows are closed.\nelectron__WEBPACK_IMPORTED_MODULE_0__[\"app\"].on('window-all-closed', () => {\n    // On macOS it is common for applications and their menu bar\n    // to stay active until the user quits explicitly with Cmd + Q\n    if (process__WEBPACK_IMPORTED_MODULE_2__[\"platform\"] !== 'darwin')\n        electron__WEBPACK_IMPORTED_MODULE_0__[\"app\"].quit();\n});\nelectron__WEBPACK_IMPORTED_MODULE_0__[\"app\"].on('activate', () => {\n    // On macOS it's common to re-create a window in the app when the\n    // dock icon is clicked and there are no other windows open.\n    if (mainWindow === null)\n        createWindow();\n});\nelectron__WEBPACK_IMPORTED_MODULE_0__[\"app\"].on('ready', () => {\n});\n// In this file you can include the rest of your app's specific main process\n// code. You can also put them in separate files and require them here.\nlet template = [\n    // {\n    //   label: '窗口',\n    //   role: 'window',\n    //   submenu: [\n    //     {\n    //       label: '重载',\n    //       click: (item, focusedWindow) => {\n    //         if (focusedWindow) {\n    //           // 重载之后, 刷新并关闭所有的次要窗体\n    //           if (focusedWindow.id === 1) {\n    //             BrowserWindow.getAllWindows().forEach((win) => {\n    //               if (win.id > 1) {\n    //                 win.close()\n    //               }\n    //             })\n    //           }\n    //           focusedWindow.reload()\n    //         }\n    //       }\n    //     },\n    //     {\n    //       label: '最小化',\n    //       role: 'minimize'\n    //     },\n    //     {\n    //       label: '切换全屏',\n    //       click: (item, focusedWindow) => {\n    //         if (focusedWindow) {\n    //           focusedWindow.setFullScreen(!focusedWindow.isFullScreen())\n    //         }\n    //       }\n    //     }\n    //   ]\n    // },\n    {\n        label: '帮助',\n        role: 'help',\n        submenu: [\n            {\n                label: '切换开发者工具',\n                accelerator: (() => {\n                    if (process__WEBPACK_IMPORTED_MODULE_2__[\"platform\"] === 'darwin') {\n                        return 'Alt+Command+I';\n                    }\n                    else {\n                        return 'Ctrl+Shift+I';\n                    }\n                })(),\n                click: (item, focusedWindow) => {\n                    if (focusedWindow) {\n                        focusedWindow.toggleDevTools();\n                    }\n                }\n            },\n            {\n                label: '下载服务器日志',\n                click: saveProcessLog\n            },\n            {\n                label: '关于',\n                click: () => {\n                    electron__WEBPACK_IMPORTED_MODULE_0__[\"shell\"].openExternal('http://www.bellcode.com');\n                }\n            }\n        ]\n    }\n];\n// //保存日志文件方法\nfunction saveProcessLog() {\n    return __awaiter(this, void 0, void 0, function* () {\n        let path = electron__WEBPACK_IMPORTED_MODULE_0__[\"dialog\"].showSaveDialogSync({\n            title: `后台进程日志另存为`,\n            filters: [{ name: \"process.log\", extensions: [\"log\"] }]\n        });\n        let content = fs__WEBPACK_IMPORTED_MODULE_1__[\"readFileSync\"](_Config__WEBPACK_IMPORTED_MODULE_5__[\"default\"].processLogPath, 'utf-8');\n        fs__WEBPACK_IMPORTED_MODULE_1__[\"writeFileSync\"](path, content, 'utf-8');\n    });\n}\n\n\n//# sourceURL=webpack:///./src/main/main.ts?");

/***/ }),

/***/ "./src/main/util.ts":
/*!**************************!*\
  !*** ./src/main/util.ts ***!
  \**************************/
/*! exports provided: util */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"util\", function() { return util; });\n/* harmony import */ var child_process__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! child_process */ \"child_process\");\n/* harmony import */ var child_process__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(child_process__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! http */ \"http\");\n/* harmony import */ var http__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(http__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var https__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! https */ \"https\");\n/* harmony import */ var https__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(https__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var querystring__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! querystring */ \"querystring\");\n/* harmony import */ var querystring__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(querystring__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./logger */ \"./src/main/logger.ts\");\n/* harmony import */ var _Config__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Config */ \"./src/main/Config.ts\");\n/* harmony import */ var _Message__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Message */ \"./src/main/Message.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/**\n * @author 雪糕\n * @desc main用的工具类\n * @date 2020-02-18 11:43:24\n * @Last Modified by: 雪糕\n * @Last Modified time: 2020-03-23 19:25:41\n */\n// const spawn = require(\"child_process\").spawn;\n\n\n\n\n\n\n\n\nvar util;\n(function (util) {\n    /** 运行cmd命令 */\n    function runCmd(cmd, cwd, successMsg, errorMsg) {\n        return new Promise((resolve, reject) => {\n            _logger__WEBPACK_IMPORTED_MODULE_5__[\"logger\"].log('cmd', `cmd --> command:${cmd} cwd:${cwd}`);\n            let process = Object(child_process__WEBPACK_IMPORTED_MODULE_0__[\"exec\"])(cmd, { cwd: cwd }, (error) => {\n                if (error) {\n                    if (errorMsg) {\n                        _logger__WEBPACK_IMPORTED_MODULE_5__[\"logger\"].error('cmd', errorMsg, error);\n                    }\n                    reject(error);\n                }\n            });\n            process.stdout.on(\"data\", data => {\n                _logger__WEBPACK_IMPORTED_MODULE_5__[\"logger\"].processLog('cmd', 'stdout', data);\n            });\n            process.stderr.on(\"data\", data => {\n                _logger__WEBPACK_IMPORTED_MODULE_5__[\"logger\"].processLog('cmd', 'stderr', data);\n            });\n            _logger__WEBPACK_IMPORTED_MODULE_5__[\"logger\"].log('cmd', successMsg);\n            resolve(process);\n        });\n    }\n    util.runCmd = runCmd;\n    /** https发送get请求 */\n    function requestGetHttps(host, port, path, data, headers, successFunc, errorFunc) {\n        requestGet(true, host, port, path, data, headers, successFunc, errorFunc);\n    }\n    util.requestGetHttps = requestGetHttps;\n    /** http发送get请求 */\n    function requestGetHttp(host, port, path, data, headers, successFunc, errorFunc) {\n        requestGet(false, host, port, path, data, headers, successFunc, errorFunc);\n    }\n    util.requestGetHttp = requestGetHttp;\n    /** 发送get请求 */\n    function requestGet(isHttps, host, port, path, data, headers, successFunc, errorFunc) {\n        let content = data ? `${querystring__WEBPACK_IMPORTED_MODULE_4___default.a.stringify(data)}` : \"\";\n        _logger__WEBPACK_IMPORTED_MODULE_5__[\"logger\"].log('net', `http isHttps:${isHttps} post data`, content);\n        path = content ? `${path}?${content}` : path;\n        let options = {\n            host: host,\n            path: path,\n            method: 'GET',\n            headers\n        };\n        if (port) {\n            options['port'] = port;\n        }\n        if (headers) {\n            options.headers = {};\n            for (const key in headers) {\n                const value = headers[key];\n                options.headers[key] = value;\n            }\n        }\n        let transportLib = isHttps ? https__WEBPACK_IMPORTED_MODULE_2___default.a : http__WEBPACK_IMPORTED_MODULE_1___default.a;\n        let request = transportLib.request(options, (response) => {\n            response.setEncoding('utf8');\n            let body = \"\";\n            response.on('data', (data) => {\n                body += data;\n            });\n            response.on('end', () => {\n                if (successFunc) {\n                    if (!!body) {\n                        successFunc(JSON.parse(body));\n                    }\n                    else {\n                        successFunc();\n                    }\n                }\n            });\n            response.on('error', (e) => {\n                if (errorFunc) {\n                    errorFunc();\n                }\n                _logger__WEBPACK_IMPORTED_MODULE_5__[\"logger\"].error('net', `get方式 http返回错误`, e);\n            });\n        });\n        request.on('error', (e) => {\n            if (errorFunc) {\n                errorFunc();\n            }\n            _logger__WEBPACK_IMPORTED_MODULE_5__[\"logger\"].error('net', `get方式 发送http请求错误`, e.message);\n        });\n        request.write(content);\n        request.end();\n    }\n    /** http发送post请求 */\n    function requestPostHttp(host, port, path, data, headers, successFunc, errorFunc) {\n        requestPost(false, host, port, path, data, headers, successFunc, errorFunc);\n    }\n    util.requestPostHttp = requestPostHttp;\n    /** https发送post请求 */\n    function requestPostHttps(host, port, path, data, headers, successFunc, errorFunc) {\n        requestPost(true, host, port, path, data, headers, successFunc, errorFunc);\n    }\n    util.requestPostHttps = requestPostHttps;\n    /** 发送post请求 */\n    function requestPost(isHttps, host, port, path, data, headers, successFunc, errorFunc) {\n        let content = data ? querystring__WEBPACK_IMPORTED_MODULE_4___default.a.stringify(data) : \"\";\n        _logger__WEBPACK_IMPORTED_MODULE_5__[\"logger\"].log('net', `http isHttps:${isHttps} post data`, content);\n        let options = {\n            host: host,\n            path: path,\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n                'Content-Length': content.length\n            }\n        };\n        if (port) {\n            options['port'] = port;\n        }\n        if (headers) {\n            for (const key in headers) {\n                const value = headers[key];\n                options.headers[key] = value;\n            }\n        }\n        let transportLib = isHttps ? https__WEBPACK_IMPORTED_MODULE_2___default.a : http__WEBPACK_IMPORTED_MODULE_1___default.a;\n        let request = transportLib.request(options, (response) => {\n            response.setEncoding('utf8');\n            let body = \"\";\n            response.on('data', (data) => {\n                body += data;\n            });\n            response.on('end', () => {\n                if (successFunc) {\n                    if (!!body) {\n                        try {\n                            successFunc(JSON.parse(body));\n                        }\n                        catch (error) {\n                            _logger__WEBPACK_IMPORTED_MODULE_5__[\"logger\"].error('net', `http isHttps:${isHttps} error, body`, body);\n                        }\n                    }\n                    else {\n                        successFunc();\n                    }\n                }\n            });\n            response.on('error', (e) => {\n                if (errorFunc) {\n                    errorFunc(e);\n                }\n                _logger__WEBPACK_IMPORTED_MODULE_5__[\"logger\"].error('net', `post方式 http返回错误`, e);\n            });\n        });\n        request.on('error', (e) => {\n            if (errorFunc) {\n                errorFunc();\n            }\n            _logger__WEBPACK_IMPORTED_MODULE_5__[\"logger\"].error('net', `post方式 发送http请求错误`, e.message);\n        });\n        request.write(content);\n        request.end();\n    }\n    /** 初始化native配置 */\n    function init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            _logger__WEBPACK_IMPORTED_MODULE_5__[\"logger\"].log('net', `初始化native本地服务器配置`);\n            let nativeCnfContent = fs__WEBPACK_IMPORTED_MODULE_3___default.a.readFileSync(_Config__WEBPACK_IMPORTED_MODULE_6__[\"default\"].nativeCnfPath, \"utf-8\");\n            util.nativeCnf = JSON.parse(nativeCnfContent);\n            let globalConfigContent = fs__WEBPACK_IMPORTED_MODULE_3___default.a.readFileSync(_Config__WEBPACK_IMPORTED_MODULE_6__[\"default\"].globalConfigPath, \"utf-8\");\n            util.globalConfig = JSON.parse(globalConfigContent);\n            //初始化清空参数\n            util.setGlobalConfigValue(\"token\", \"\");\n            _Config__WEBPACK_IMPORTED_MODULE_6__[\"default\"].setEnvironName(util.globalConfig.environName);\n        });\n    }\n    util.init = init;\n    /** 写入服务端配置文件 */\n    function writeServerCnfValue(key, value) {\n        return __awaiter(this, void 0, void 0, function* () {\n            util.nativeCnf[key] = value;\n            let content = JSON.stringify(util.nativeCnf, null, 4);\n            fs__WEBPACK_IMPORTED_MODULE_3___default.a.writeFileSync(_Config__WEBPACK_IMPORTED_MODULE_6__[\"default\"].nativeCnfPath, content);\n        });\n    }\n    util.writeServerCnfValue = writeServerCnfValue;\n    /** 获取全局配置值 */\n    function getGlobalConfigValue(key) {\n        return util.globalConfig[key];\n    }\n    util.getGlobalConfigValue = getGlobalConfigValue;\n    /** 设置全局配置值 */\n    function setGlobalConfigValue(key, value) {\n        util.globalConfig[key] = value;\n        _logger__WEBPACK_IMPORTED_MODULE_5__[\"logger\"].log('globalConfig', `content`, util.globalConfig);\n        fs__WEBPACK_IMPORTED_MODULE_3___default.a.writeFileSync(_Config__WEBPACK_IMPORTED_MODULE_6__[\"default\"].globalConfigPath, JSON.stringify(util.globalConfig, null, 4), \"utf-8\");\n        _Message__WEBPACK_IMPORTED_MODULE_7__[\"default\"].sendIpcMsg('UPDATE_GLOBAL_CONFIG', util.globalConfig);\n    }\n    util.setGlobalConfigValue = setGlobalConfigValue;\n})(util || (util = {}));\n\n\n//# sourceURL=webpack:///./src/main/util.ts?");

/***/ }),

/***/ "child_process":
/*!********************************!*\
  !*** external "child_process" ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"child_process\");\n\n//# sourceURL=webpack:///external_%22child_process%22?");

/***/ }),

/***/ "electron":
/*!***************************!*\
  !*** external "electron" ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"electron\");\n\n//# sourceURL=webpack:///external_%22electron%22?");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"fs\");\n\n//# sourceURL=webpack:///external_%22fs%22?");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"http\");\n\n//# sourceURL=webpack:///external_%22http%22?");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"https\");\n\n//# sourceURL=webpack:///external_%22https%22?");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"os\");\n\n//# sourceURL=webpack:///external_%22os%22?");

/***/ }),

/***/ "process":
/*!**************************!*\
  !*** external "process" ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"process\");\n\n//# sourceURL=webpack:///external_%22process%22?");

/***/ }),

/***/ "querystring":
/*!******************************!*\
  !*** external "querystring" ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"querystring\");\n\n//# sourceURL=webpack:///external_%22querystring%22?");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"url\");\n\n//# sourceURL=webpack:///external_%22url%22?");

/***/ })

/******/ });